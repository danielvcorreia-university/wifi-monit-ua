{"version":3,"sources":["JSON/depsGeoJSON.geojson","components/Header.js","components/Map.js","pages/index.jsx","pages/404.jsx","pages/myConnection.jsx","components/GridWithImage.js","components/DepartmentGeneric.js","pages/department.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","to","style","textDecoration","Button","Map","useState","latitude","longitude","zoom","width","height","bearing","viewport","setViewport","selectDep","setSelectDep","highlight","setHighlight","minZoom","mapboxApiAccessToken","process","onViewportChange","right","depLoc","departments","map","department","key","DEP_NUMBER","coordinates","pathname","state","depNum","size","onMouseEnter","onMouseLeave","DEP_NOME","IndexPage","Grid","container","direction","item","NotFoundPage","ConnectionPage","user","idx","handleClick","e","console","log","name","charAt","alert","React","Component","slideIndex","basedir","showSlides","n","i","slides","document","getElementsByClassName","dots","length","display","replace","plusSlides","currentSlide","getNumDevicesOfAP","AP","numDevices","getColorFromNumDevices","getClickAPText","handleHoverON","this","setState","string","handleHoverOFF","DepartmentGeneric","props","imagempiso1","imagempiso2","imagempiso3","MAP1","areas","MAP2","MAP3","id","shape","coords","preFillColor","src","onClick","bind","imgWidth","imgHeight","textAlign","DepartmentPage","location","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"js/main.855dbc5b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/depsGeoJSON.e4ba31f9.geojson\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n          <Link to=\"/\" style={{textDecoration: 'inherit', color: 'white'}}> WiFi-monitUA </Link>\n          </Typography>\n          <Button color=\"inherit\"> <Link to=\"/myconnection\" style={{textDecoration: 'inherit', color: 'white'}}> My Connection </Link> </Button> \n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport ReactMapGL, {NavigationControl, Marker, Source, Layer, Popup} from \"react-map-gl\";\nimport { Button, IconButton } from '@material-ui/core';\nimport { Link } from \"react-router-dom\";\nimport depGeoJSON from \"../JSON/depsGeoJSON.geojson\";\nimport depLoc from \"../JSON/depLoc.json\";\nimport ApartmentIcon from '@material-ui/icons/Apartment';\n\nexport default function Map() {\n  const [viewport, setViewport] = useState({\n    latitude: 40.629620,\n    longitude: -8.657000,\n    zoom: 16,\n    width: \"99vw\",\n    height: \"92vh\",\n    bearing: 275\n  });\n  \n  const settings = {\n    minZoom: 16\n  }\n\n  const [selectDep, setSelectDep] = useState(null);\n  const [highlight, setHighlight] = useState(false);\n  \n  const depLayer = {            /* Department inactive background layer */ \n    id: 'dep',\n    type: 'fill',\n    paint: {\n      'fill-outline-color': '#000000',\n      'fill-color': '#000000'\n    }\n  };\n\n  const highlightLayer = {      /* Department highlighted layer */\n    id: 'depHighlight',\n    type: 'fill',\n    paint: {\n      'fill-outline-color': '#484896',\n      'fill-color': '#6e599f',\n      'fill-opacity': 0.75\n    }\n  };\n\n  const geojson = {\n    type: 'Feature', \n    geometry: {\"type\": \"Polygon\",\n      \"coordinates\": [\n        [\n          [40.632714, -8.659114], [40.632730, -8.659340], [40.633096, -8.659353],\n          [40.633102, -8.659670], [40.633517, -8.659678], [40.633519, -8.659490],\n          [40.633252, -8.659487], [40.633248, -8.659128], [40.632714, -8.659114]\n        ]\n      ]\n    }\n  };\n\n  return (\n    <ReactMapGL\n      {...viewport}\n      {...settings}\n      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n      onViewportChange={viewport => {setViewport(viewport)}}\n    >\n    {/*    Layers de destaque dos departamentos não tão a funcionar por alguma razão  \n      <Source id=\"dep\" type=\"geojson\" data={geojson}>\n          <Layer id=\"depHighlight\"{...highlightLayer} />\n      </Source>\n    */}\n      <div style={{position: 'absolute', right: 0}}>\n          <NavigationControl />\n      </div>\n\n      {depLoc.departments.map(department => (\n        <Marker key={department.DEP_NUMBER} latitude={department.coordinates[0]} longitude={department.coordinates[1]}>\n          <Link to={{\n                    pathname:'/department',\n                    state:{\n                        depNum: department.DEP_NUMBER\n                    }\n                  }}>\n            <IconButton color=\"primary\" aria-label=\"dep\" size=\"small\" onMouseEnter={() => {setHighlight(true); setSelectDep(department)}} onMouseLeave={() => setHighlight(false)}>\n              <ApartmentIcon />\n            </IconButton>\n          </Link>\n        </Marker>\n      ))}\n      {highlight && (\n        <Popup latitude={selectDep.coordinates[0]} longitude={selectDep.coordinates[1]}>\n          <div>\n            <h1>{selectDep.DEP_NUMBER} - {selectDep.DEP_NOME}</h1>\n          </div>\n        </Popup>\n      )}\n      \n      {/*<Marker\n        key={1}\n        latitude={40.633213}\n        longitude={-8.659457}\n      >\n        \n        <Link to={{\n                    pathname:'/department',\n                    state:{\n                        depNum: 4\n                    }\n                  }}>\n          <Button variant=\"contained\" color=\"primary\" size=\"small\">\n            DETI\n          </Button>\n        </Link>\n      </Marker> */}\n    </ReactMapGL>\n  );\n}","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Header from \"../components/Header\";\nimport Map from \"../components/Map\";\n\nimport Button from '@material-ui/core/Button';\nimport { Link } from \"react-router-dom\";\n\nconst IndexPage = () => {\n    return (\n        <div>\n            <Grid container direction=\"column\">\n                <Grid item>\n                    <Header />\n                </Grid> \n                <Map/>\n                <Button> \n                    <Link to={{\n                        pathname:'/department',\n                        state:{\n                            depNum: 4\n                        }\n                    }}> DETI (departamento 4) </Link> \n                </Button> \n                <Button> \n                    <Link to={{\n                        pathname:'/department',\n                        state:{\n                            depNum: 23\n                        }\n                    }}> CP (departamento 23) </Link> \n                </Button>        \n            </Grid>\n        </div>\n    );\n};\n\nexport default IndexPage;","import React from \"react\"\n\n\nconst NotFoundPage = () => {\n    return (\n        <div>\n            <h2> 404 Not Found!</h2>\n        </div>\n    );\n};\n\nexport default NotFoundPage;","import React from \"react\"\nimport Header from \"../components/Header\";\n\nconst ConnectionPage = () => {\n    return (\n        <div>\n            <Header />\n            <h2> Você está conectado ao AP: null </h2>\n            <ul>\n                {[\"teste1\", \"teste2\", \"teste3\", \"teste4\"].map((user,idx) => {\n                    return <li key={idx}>{user}</li>\n                })}\n            </ul>\n        </div>\n    );\n};\n\nexport default ConnectionPage;","import React from 'react';\nimport { Grid } from \"@material-ui/core\";\nimport ImageMapper from 'react-image-mapper';\n\nimport '../pages/dep.css';\n\nfunction handleClick(e){\n    console.log(e.name);\n    if (e.name.charAt(0) == 'A') {\n        alert(e.name);\n    } else {\n        return ;\n    }\n}\n\nexport class GridWithImage extends React.Component{\n    render() {\n        console.log(this.props);\n        return (\n            <div>\n                <Grid container direction=\"column\">\n                    <div style={{ padding: 20 }}>\n                        <Grid item container>\n                        <Grid item xs={0} sm={2} />\n                        <Grid item xs={12} sm={8}>\n                            <ImageMapper src={this.props.image} map={this.props.map} onClick={handleClick.bind(this)} />\n                        </Grid>\n                        <Grid item xs={0} sm={2} />\n                        </Grid>\n                    </div>\n                </Grid>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport {GridWithImage} from './GridWithImage';\nimport './DepartmentGeneric.css';\nimport ImageMapper from 'react-image-mapper';\n\nvar slideIndex = 1;\nvar basedir = \"../static/react/\"\n \nfunction showSlides(n) {\n    var i;\n    var slides = document.getElementsByClassName(\"mySlides\");\n\n    var dots = document.getElementsByClassName(\"dot\");\n    if (n > slides.length) {slideIndex = 1}\n    if (n < 1) {slideIndex = slides.length}\n    for (i = 0; i < slides.length; i++) {\n        slides[i].style.display = \"none\";\n    }\n    for (i = 0; i < dots.length; i++) {\n        dots[i].className = dots[i].className.replace(\" active\", \"\");\n    }\n    slides[slideIndex-1].style.display = \"block\";\n    dots[slideIndex-1].className += \" active\";\n}\n\nfunction plusSlides(n) {\n    showSlides(slideIndex += n);\n}\n\n// Thumbnail image controls\nfunction currentSlide(n) {\n    showSlides(slideIndex = n);\n}\n\n// obtem numero de devices atraves do AP dado ( a substituir pela função da API )\nfunction getNumDevicesOfAP(AP) {\n    var numDevices = 0;\n    // deti piso 1\n    if (AP == \"salaEstudo\"){\n        numDevices = 20;\n    } else if (AP == \"makerLab\"){\n        numDevices = 60;\n    } else if (AP == \"anfiteatro\"){\n        numDevices = 10;\n    } else if (AP == \"salas computadores\"){\n        numDevices = 50;\n    } else if (AP == \"secretaria\"){\n        numDevices = 35;\n    }else if (AP == \"sala dos nucleos\"){ \n        numDevices = 10;\n    }\n    // deti piso 2\n    else if (AP == \"sala de redes\"){ \n        numDevices = 40;\n    } \n    else if (AP == \"area de salas\"){ \n        numDevices = 20;\n    }\n    else if (AP == \"area do canto\"){ \n        numDevices = 10;\n    }\n    else if (AP == \"area de gabinetes\"){ \n        numDevices = 18;\n    }\n    else if (AP == \"area de gabinetes com sala\"){ \n        numDevices = 25;\n    }\n    // deti piso 3\n    else if (AP == \"area de SE\"){ \n        numDevices = 39;\n    } \n    else if (AP == \"area de salinhas\"){ \n        numDevices = 26;\n    }\n    else if (AP == \"area de gabinetes3\"){ \n        numDevices = 6;\n    }\n    else if (AP == \"area de gabinetes com sala3\"){ \n        numDevices = 14;\n    }\n    else {\n\n    }\n\n    return numDevices;\n}\n\n\n// escalas de cores dependendo do numero de devices ligados\nfunction getColorFromNumDevices(numDevices){\n    if (numDevices >= 0 && numDevices <= 10 ){\n        //console.log(numDevices);\n        return \"rgba(0,255,0,0.6)\"; //verde\n    } else if (numDevices > 10 && numDevices <= 20){\n        return \"rgba(255,255,0,0.6)\"; //amarelo\n    } else if (numDevices > 20 && numDevices <= 40){\n        return \"rgba(255,127,80,0.6)\"; //laranja\n    } else if (numDevices > 40 && numDevices <= 55){\n        return \"rgba(255,0,0,0.6)\"; //vermelho\n    } else { //numDevices > 55\n        return \"rgba(150,100,200,0.6)\"; //roxo\n    }\n}\n\nfunction getClickAPText(AP) {\n    return \"AP: \" + AP + \", NUM OF CONNECTED DEVICES: \" + getNumDevicesOfAP(AP);\n}\n\nfunction handleClick(e){\n    //console.log(e.name);\n    if (e.name.charAt(0) == 'A') {\n        alert(e.name);\n    } else {\n        return ;\n    }\n}\n\nfunction handleHoverON(e){\n    //console.log(e.name);\n    this.setState({string : e.name});\n}\n\nfunction handleHoverOFF(e){\n    this.setState({string : \"Piso \"+ slideIndex});\n}\n\nexport class DepartmentGeneric extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {string : \"Piso \"+ slideIndex};\n    }\n\n    componentDidMount(){\n        showSlides(slideIndex);\n\n    }\n    render() {\n        var imagempiso1 = basedir+\"logo512.png\";\n        var imagempiso2 = basedir+\"logo512.png\";\n        var imagempiso3 = basedir+\"logo512.png\";\n        var MAP1 = {name : \"default\", areas: []};\n        var MAP2 = {name : \"default2\", areas: []};\n        var MAP3 = {name : \"default3\", areas: []};\n\n        //console.log(getNumDevicesOfAP(\"salaEstudo\"));\n        //console.log(getNumDevicesOfAP(\"makerLab\"));\n        //console.log(getNumDevicesOfAP(\"nucleos\"));\n        //console.log(this.props.id.depNum);\n        // Next/previous controls\n\n\n        switch(this.props.id.depNum) {\n            case 4:\n                imagempiso1 = basedir+\"images/dep4_p1.png\";\n                imagempiso2 = basedir+\"images/dep4_p2.png\";\n                imagempiso3 = basedir+\"images/dep4_p3.png\";\n                MAP1 = {\n                    name: \"mapadetipiso1\",\n                    areas: [\n                        // APs\n                        {name: getClickAPText(\"salaEstudo\"), shape: \"circle\", coords: [944,237,15], preFillColor: \"rgba(0,0,250,1)\"},\n                        {name: getClickAPText(\"makerLab\"), shape: \"circle\", coords: [1360,235,15], preFillColor: \"rgba(0,0,250,1)\"},\n                        {name: getClickAPText(\"sala dos nucleos\"), shape: \"circle\", coords: [1566,235,15], preFillColor: \"rgba(0,0,250,1)\"},\n                        {name: getClickAPText(\"anfiteatro\"), shape: \"circle\", coords: [366,774,15], preFillColor: \"rgba(0,0,250,1)\"},\n                        {name: getClickAPText(\"salas computadores\"), shape: \"circle\", coords: [539,818,15], preFillColor: \"rgba(0,0,250,1)\"},\n                        {name: getClickAPText(\"secretaria\"), shape: \"circle\", coords: [912,804,15], preFillColor: \"rgba(0,0,250,1)\"},\n\n                        // salas mais perto do AP da sala de estudo\n                        {name: \"4.1.18\", shape: \"rect\", coords: [803,233,930,365], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"salaEstudo\") )}, // 4.1.18\n                        {name: \"4.1.19\", shape: \"rect\", coords: [801,94,1024,229], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"salaEstudo\") )}, // 4.1.19\n                        {name: \"4.1.20\", shape: \"rect\", coords: [1028,94,1160,229], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"salaEstudo\") )}, // 4.1.20\n\n                        // salas mais perto do AP makerlab\n                        {name: \"4.1.23\", shape: \"rect\", coords: [1164,94,1307,229], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"makerLab\") )}, //4.1.23\n                        {name: \"4.1.26\", shape: \"rect\", coords: [1311,94,1421,229], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"makerLab\") )}, // 4.1.26\n                        {name: \"4.1.27\", shape: \"rect\", coords: [1424,94,1477,229], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"makerLab\") )}, // 4.1.27\n                        {name: \"4.1.24\", shape: \"rect\", coords: [1260,285,1307,365], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"makerLab\") )}, // 4.1.24\n                        {name: \"4.1.25\", shape: \"rect\", coords: [1312,285,1368,365], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"makerLab\") )}, // 4.1.25\n\n                        // salas mais perto do AP sala dos nucleos\n                        {name: \"4.1.28\", shape: \"rect\", coords: [1481,94,1591,229], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"sala dos nucleos\") )}, // 4.1.28\n                        {name: \"4.1.29\", shape: \"rect\", coords: [1478,285,1523,365], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"sala dos nucleos\") )}, // 4.1.29\n                        {name: \"4.1.30\", shape: \"rect\", coords: [1528,285,1702,365], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"sala dos nucleos\") )}, // 4.1.30\n                        {name: \"4.1.32\", shape: \"rect\", coords: [1595,94,1702,229], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"sala dos nucleos\") )}, // 4.1.32\n\n                        // salas mais perto do AP anfiteatro\n                        {name: \"4.1.01\", shape: \"rect\", coords: [209,687,371,805], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"anfiteatro\") )}, // 4.1.01\n                        {name: \"4.1.02\", shape: \"rect\", coords: [209,823,428,958], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"anfiteatro\") )}, // 4.1.02\n\n                        // salas computadores\n                        {name: \"4.1.04\", shape: \"rect\", coords: [433,823,598,958], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"salas computadores\") )}, // 4.1.04\n                        {name: \"4.1.06\", shape: \"rect\", coords: [603,823,769,958], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"salas computadores\") )}, // 4.1.06\n\n                        // secretaria\n                        {name: \"4.1.11 - .17\", shape: \"poly\", coords: [914,688 , 914,806, 883,806, 883,916, 998,916, 998,958, 1104,958, 1104,688], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"secretaria\") )}, // 4.1.11-17\n                        \n                        // aquario\n                        {name: \"4.1.36\", shape: \"poly\", coords: [998,293, 1133,293, 1133,364, 1099,364, 1099,484, 1050,484, 1050,470, 985,470, 984,369, 998,369], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"salaEstudo\") )}, // 4.1.36\n                    ]\n                };\n                MAP2 = {\n                    name: \"mapadetipiso2\",\n                    areas: [\n                        // APs\n                        {name: getClickAPText(\"sala de redes\"), shape: \"circle\", coords: [955,774,15], preFillColor: \"rgba(0,0,250,1)\"},\n                        {name: getClickAPText(\"area de salas\"), shape: \"circle\", coords: [644,817,15], preFillColor: \"rgba(0,0,250,1)\"},\n                        {name: getClickAPText(\"area do canto\"), shape: \"circle\", coords: [292,774,15], preFillColor: \"rgba(0,0,250,1)\"},\n                        {name: getClickAPText(\"area de gabinetes\"), shape: \"circle\", coords: [1415,248,15], preFillColor: \"rgba(0,0,250,1)\"},\n                        {name: getClickAPText(\"area de gabinetes com sala\"), shape: \"circle\", coords: [982,268,15], preFillColor: \"rgba(0,0,250,1)\"},\n    \n\n                        // area de gabinetes\n                        {name: \"4.2.32 - 46\", shape: \"rect\", coords: [1137,96,1702,366], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"area de gabinetes\") )}, // 4.1.18\n\n                        // area de gabinetes com sala\n                        {name: \"4.2.23 - 31\", shape: \"poly\", coords: [804,364, 914,364, 915,492, 1138,492, 1138,96, 801,96], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"area de gabinetes com salas\") )}, // 4.1.18\n\n                        // area de salas\n                        {name: \"4.2.08 - 14\", shape: \"rect\", coords: [435,687,768,958], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"area de salas\") )}, // 4.1.18\n\n                        // area do canto\n                        {name: \"4.2.01 - 7\", shape: \"rect\", coords: [209,687,432,958], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"area do canto\") )}, // 4.1.18\n\n                        // area de redes\n                        {name: \"4.2.15 - 22\", shape: \"poly\", coords: [993,559, 773,559, 773,958, 1105,957, 1105,688, 993,688], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"sala de redes\") )}, // area de redes\n                    ]\n                };\n                MAP3 = {\n                    name: \"mapadetipiso3\",\n                    areas: [\n                        // APs\n                        {name: getClickAPText(\"area de SE\"), shape: \"circle\", coords: [955,774,15], preFillColor: \"rgba(0,0,250,1)\"},\n                        {name: getClickAPText(\"area de salinhas\"), shape: \"circle\", coords: [417,773,15], preFillColor: \"rgba(0,0,250,1)\"},\n                        {name: getClickAPText(\"area de gabinetes3\"), shape: \"circle\", coords: [1414,249,15], preFillColor: \"rgba(0,0,250,1)\"},\n                        {name: getClickAPText(\"area de gabinetes com sala3\"), shape: \"circle\", coords: [1037,292,15], preFillColor: \"rgba(0,0,250,1)\"},\n    \n\n                        // area de SE\n                        {name: \"4.3.15 - 24\", shape: \"poly\", coords: [993,559, 994,687, 1104,688, 1104,958, 660,958, 660,769, 654,769, 654,687, 773,687, 773,559], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"area de SE\") )}, // 4.1.18\n\n                        // area de salinhas\n                        {name: \"4.3.01 - 17\", shape: \"rect\", coords: [208,687,659,958], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"area de salinhas\") )}, // 4.1.18\n\n                        // area de gabinetes3\n                        {name: \"4.3.33 - 47\", shape: \"rect\", coords: [1164,94,1702,365], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"area de gabinetes3\") )}, // 4.1.18\n\n                        // area de gabinetes com sala 3\n                        {name: \"4.3.25 - 32\", shape: \"poly\", coords: [914,492, 1136,492, 1136,365, 1161,365, 1161,94, 801,94, 801,365, 914,365], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"area de gabinetes com sala3\") )}, // 4.1.18\n\n                    ]\n                };\n                break;\n            case 11:\n                imagempiso1 = basedir+\"images/dep11_p1.png\";\n                imagempiso2 = basedir+\"images/dep11_p2.png\";\n                imagempiso3 = basedir+\"images/dep11_p3.png\";\n                MAP1 = {\n                    name: \"mapadmatpiso1\",\n                    areas: [\n                        // APs\n                        {name: getClickAPText(\"area topleft\"), shape: \"circle\", coords: [469,396,15], preFillColor: \"rgba(0,0,250,1)\"},\n                        {name: getClickAPText(\"area botleft\"), shape: \"circle\", coords: [536,772,15], preFillColor: \"rgba(0,0,250,1)\"},\n                        {name: getClickAPText(\"area mid\"), shape: \"circle\", coords: [867,776,15], preFillColor: \"rgba(0,0,250,1)\"},\n                        {name: getClickAPText(\"area botright\"), shape: \"circle\", coords: [1224,776,15], preFillColor: \"rgba(0,0,250,1)\"},\n    \n\n                        // area topleft\n                        {name: \"11.1.07 - 12\", shape: \"rect\", coords: [211,286,570,490], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"area topleft\") )}, // topleft\n\n                        // area botleft\n                        {name: \"bottomleft area\", shape: \"poly\", coords: [211,571, 211,964, 686,964, 686,639, 570,639, 570,571], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"area botleft\") )}, // botleft\n\n                        // area mid\n                        {name: \"11.1.25 - 30 salas\", shape: \"rect\", coords: [690,602,1089,953], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"area mid\") )}, // mid\n\n                        // area botright\n                        {name: \"11.1.31 - 39 salas\", shape: \"rect\", coords: [1095,602,1358,953], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"area botright\") )}, // botright\n\n                    ]\n                };\n                MAP2 = {\n                    name: \"mapadmatpiso2\",\n                    areas: [\n                        // APs\n                        {name: getClickAPText(\"area topleft2\"), shape: \"circle\", coords: [456,445,15], preFillColor: \"rgba(0,0,250,1)\"},\n                        {name: getClickAPText(\"area botleft2\"), shape: \"circle\", coords: [551,813,15], preFillColor: \"rgba(0,0,250,1)\"},\n                        {name: getClickAPText(\"area mid2\"), shape: \"circle\", coords: [857,776,15], preFillColor: \"rgba(0,0,250,1)\"},\n                        {name: getClickAPText(\"area botright2\"), shape: \"circle\", coords: [1224,776,15], preFillColor: \"rgba(0,0,250,1)\"},\n    \n\n                        // area topleft\n                        {name: \"11.2.8 - 16\", shape: \"rect\", coords: [211,286,570,634], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"area topleft2\") )}, // topleft\n\n                        // area botleft\n                        {name: \"11.2.1 - 7; 11.2.18 - 20\", shape: \"rect\", coords: [211,637,687,958], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"area botleft2\") )}, // botleft\n\n                        // area mid\n                        {name: \"11.2.21 - 28 salas\", shape: \"rect\", coords: [690,639,1089,959], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"area mid2\") )}, // mid\n\n                        // area botright\n                        {name: \"11.2.29 - 41 salas\", shape: \"rect\", coords: [1096,634,1360,957], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"area botright2\") )}, // botright\n\n                    ]\n                };\n                MAP3 = {\n                    name: \"mapadmatpiso3\",\n                    areas: [\n                        // APs\n                        {name: getClickAPText(\"area topleft3\"), shape: \"circle\", coords: [456,445,15], preFillColor: \"rgba(0,0,250,1)\"},\n                        {name: getClickAPText(\"area botleft3\"), shape: \"circle\", coords: [464,852,15], preFillColor: \"rgba(0,0,250,1)\"},\n                        {name: getClickAPText(\"area mid3\"), shape: \"circle\", coords: [831,751,15], preFillColor: \"rgba(0,0,250,1)\"},\n                        {name: getClickAPText(\"area botright3\"), shape: \"circle\", coords: [1188,750,15], preFillColor: \"rgba(0,0,250,1)\"},\n    \n\n                        // area topleft\n                        {name: \"11.3.12 - 23\", shape: \"rect\", coords: [207,275,590,665], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"area topleft3\") )}, // topleft\n\n                        // area botleft\n                        {name: \"11.3.1 - 11\", shape: \"rect\", coords: [238,668,618,930], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"area botleft2\") )}, // botleft\n\n                        // area mid\n                        {name: \"11.3.25 - 30; 11.3.42 - 50\", shape: \"rect\", coords: [625,687,1024,930], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"area mid2\") )}, // mid\n\n                        // area botright\n                        {name: \"11.3.31 - 41 salas\", shape: \"rect\", coords: [1029,688,1369,929], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"area botright2\") )}, // botright\n\n                    ]\n                };\n                break;\n            default:\n\n        }\n\n        /*\n        <h1 align=\"center\"> {this.props.id.depName} </h1>\n        <h3 align=\"center\"> Piso 1 </h3>\n        <GridWithImage image={imagempiso1} map={MAP1} />\n        <h3 align=\"center\"> Piso 2 </h3>\n        <GridWithImage image={imagempiso2} map={MAP1} />\n        <h3 align=\"center\"> Piso 3 </h3>\n        <GridWithImage image={imagempiso3} map={MAP1} />\n\n\n                            <ImageMapper src={imagempiso1} map={MAP1} onClick={handleClick.bind(this)} width={1000} height={600}/>\n        */\n        return (\n            <div>\n\n                <div className=\"slideshow-container\">\n\n                    <div className=\"mySlides fade\">\n                        <div className=\"numbertext\">1 / 3</div>\n                            <ImageMapper src={imagempiso1} map={MAP1} onClick={handleClick.bind(this)} onMouseEnter={handleHoverON.bind(this)} onMouseLeave={handleHoverOFF.bind(this)} imgWidth={1920} width={1244} imgHeight={1080} height={700}/>\n                        <div className=\"text\"> {this.state.string} </div>\n                    </div>\n\n                    <div className=\"mySlides fade\">\n                        <div className=\"numbertext\">2 / 3</div>\n                            <ImageMapper src={imagempiso2} map={MAP2} onClick={handleClick.bind(this)}  onMouseEnter={handleHoverON.bind(this)} onMouseLeave={handleHoverOFF.bind(this)} imgWidth={1920} width={1244} imgHeight={1080} height={700}/>\n                        <div className=\"text\"> {this.state.string} </div>\n                    </div>\n\n                    <div className=\"mySlides fade\">\n                        <div className=\"numbertext\">3 / 3</div>\n                            <ImageMapper src={imagempiso3} map={MAP3} onClick={handleClick.bind(this)} onMouseEnter={handleHoverON.bind(this)} onMouseLeave={handleHoverOFF.bind(this)} imgWidth={1920} width={1244} imgHeight={1080} height={700}/>\n                        <div className=\"text\"> {this.state.string} </div>\n                    </div>\n\n                    <a className=\"prev\" onClick={() => plusSlides(-1)}>&#10094;</a>\n                    <a className=\"next\" onClick={() => plusSlides(1)}>&#10095;</a>\n                </div>\n                <br/>\n\n                <div style={{textAlign: \"center\",}}>\n                    <span className=\"dot\" onClick={() => currentSlide(1)}></span>\n                    <span className=\"dot\" onClick={() => currentSlide(2)}></span>\n                    <span className=\"dot\" onClick={() => currentSlide(3)}></span>\n                </div>\n\n            </div>\n        );\n    }\n}","import React from \"react\"\nimport Header from \"../components/Header\";\nimport {DepartmentGeneric} from \"../components/DepartmentGeneric\";\n\n/*\nconst DepartmentPage = () => {\n\n    return (\n        <div>\n            <Header />\n            <DepartmentGeneric />\n        </div>\n    );\n};\n*/\n\nexport class DepartmentPage extends React.Component{\n    render() {\n        return (\n            <div>\n                <Header />\n                <DepartmentGeneric id={this.props.location.state} />\n            </div>\n        );\n    }\n}\n\nexport default DepartmentPage;\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport { \n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Link,\n  Redirect \n} from \"react-router-dom\";\n\n//Pages\nimport IndexPage from \"./pages\";\nimport NotFoundPage from \"./pages/404\";\nimport ConnectionPage from \"./pages/myConnection\";\n//import Dep4Page from \"./pages/dep4\";\nimport DepartmentPage from \"./pages/department\";\n\nclass App extends Component {\n  render() {\n    return <Router> \n      <Switch>\n        <Route exact path=\"/\" component={IndexPage} />\n        <Route exact path=\"/myconnection\" component={ConnectionPage}/>\n        <Route exact path=\"/department\" component={DepartmentPage}/>\n        <Route path=\"/404\" component={NotFoundPage}/>\n        <Redirect to=\"/404\"/>\n      </Switch>\n    </Router>\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}