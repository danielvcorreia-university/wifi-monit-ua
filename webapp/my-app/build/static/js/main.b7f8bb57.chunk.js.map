{"version":3,"sources":["components/Header.js","components/Map.js","pages/index.jsx","pages/404.jsx","pages/myConnection.jsx","components/GridWithImage.js","components/DepartmentGeneric.js","pages/department.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","to","style","textDecoration","Button","Map","useState","latitude","longitude","zoom","width","height","bearing","viewport","setViewport","mapboxApiAccessToken","process","onViewportChange","right","key","pathname","state","depNum","size","IndexPage","Grid","container","direction","item","NotFoundPage","ConnectionPage","map","user","idx","handleClick","e","console","log","name","charAt","alert","GridWithImage","this","props","padding","xs","sm","src","image","onClick","bind","React","Component","getNumDevicesOfAP","AP","getColorFromNumDevices","numDevices","getClickAPText","DepartmentGeneric","imagempiso1","imagempiso2","imagempiso3","MAP1","areas","id","shape","coords","fillColor","preFillColor","align","depName","DepartmentPage","location","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b7f8bb57.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n          <Link to=\"/\" style={{textDecoration: 'inherit', color: 'white'}}> WiFi-monitUA </Link>\n          </Typography>\n          <Button color=\"inherit\"> <Link to=\"/myconnection\" style={{textDecoration: 'inherit', color: 'white'}}> My Connection </Link> </Button> \n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport ReactMapGL, {NavigationControl, Marker} from \"react-map-gl\";\nimport { Button } from '@material-ui/core'\nimport { Link } from \"react-router-dom\";\n\nexport default function Map() {\n  const [viewport, setViewport] = useState({\n    latitude: 40.629620,\n    longitude: -8.657000,\n    zoom: 16,\n    width: \"99vw\",\n    height: \"92vh\",\n    bearing: 275\n  });\n\n  return (\n    <ReactMapGL\n      {...viewport}\n      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n      onViewportChange={viewport => {setViewport(viewport)}}\n    >\n      <div style={{position: 'absolute', right: 0}}>\n          <NavigationControl />\n      </div>\n      \n      <Marker\n        key={1}\n        latitude={40.633213}\n        longitude={-8.659457}\n      >\n        \n        <Link to={{\n                    pathname:'/department',\n                    state:{\n                        depNum: 4\n                    }\n                  }}>\n          <Button variant=\"contained\" color=\"primary\" size=\"small\">\n            DETI\n          </Button>\n        </Link>\n      </Marker>\n    </ReactMapGL>\n  );\n}","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Header from \"../components/Header\";\nimport Map from \"../components/Map\";\n\nimport Button from '@material-ui/core/Button';\nimport { Link } from \"react-router-dom\";\n\nconst IndexPage = () => {\n    return (\n        <div>\n            <Grid container direction=\"column\">\n                <Grid item>\n                    <Header />\n                </Grid> \n                <Map/>\n                <Button> \n                    <Link to={{\n                        pathname:'/department',\n                        state:{\n                            depNum: 4\n                        }\n                    }}> DETI (departamento 4) </Link> \n                </Button> \n                <Button> \n                    <Link to={{\n                        pathname:'/department',\n                        state:{\n                            depNum: 23\n                        }\n                    }}> CP (departamento 23) </Link> \n                </Button>        \n            </Grid>\n        </div>\n    );\n};\n\nexport default IndexPage;","import React from \"react\"\n\n\nconst NotFoundPage = () => {\n    return (\n        <div>\n            <h2> 404 Not Found!</h2>\n        </div>\n    );\n};\n\nexport default NotFoundPage;","import React from \"react\"\nimport Header from \"../components/Header\";\n\nconst ConnectionPage = () => {\n    return (\n        <div>\n            <Header />\n            <h2> Você está conectado ao AP: null </h2>\n            <ul>\n                {[\"teste1\", \"teste2\", \"teste3\", \"teste4\"].map((user,idx) => {\n                    return <li key={idx}>{user}</li>\n                })}\n            </ul>\n        </div>\n    );\n};\n\nexport default ConnectionPage;","import React from 'react';\nimport { Grid } from \"@material-ui/core\";\nimport ImageMapper from 'react-image-mapper';\n\nimport '../pages/dep.css';\n\nfunction handleClick(e){\n    console.log(e.name);\n    if (e.name.charAt(0) == 'A') {\n        alert(e.name);\n    } else {\n        return ;\n    }\n}\n\nexport class GridWithImage extends React.Component{\n    render() {\n        console.log(this.props);\n        return (\n            <div>\n                <Grid container direction=\"column\">\n                    <div style={{ padding: 20 }}>\n                        <Grid item container>\n                        <Grid item xs={0} sm={2} />\n                        <Grid item xs={12} sm={8}>\n                            <ImageMapper src={this.props.image} map={this.props.map} onClick={handleClick.bind(this)} />\n                        </Grid>\n                        <Grid item xs={0} sm={2} />\n                        </Grid>\n                    </div>\n                </Grid>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport {GridWithImage} from './GridWithImage';\n\nfunction getNumDevicesOfAP(AP) {\n    var numDevices = 0;\n    if (AP == \"salaEstudo\"){\n        numDevices = 20;\n    } else if (AP == \"makerLab\"){\n        numDevices = 40;\n    } else { // AP == \"nucleos\"\n        numDevices = 10;\n    }\n    return numDevices;\n}\n\nfunction getColorFromNumDevices(numDevices){\n    if (numDevices >= 0 && numDevices <= 10 ){\n        console.log(numDevices);\n        return \"rgba(260,0,0,0.2)\";\n    } else if (numDevices > 10 && numDevices <= 20){\n        return \"rgba(260,0,0,0.4)\";\n    } else { //numDevices > 20 \n        return \"rgba(260,0,0,0.6)\";\n    }\n}\n\nfunction getClickAPText(AP) {\n    return \"AP: \" + AP + \", NUM OF CONNECTED DEVICES: \" + getNumDevicesOfAP(AP);\n}\n\nexport class DepartmentGeneric extends React.Component{\n    render() {\n        var imagempiso1 = \"./logo512.png\";\n        var imagempiso2 = \"./logo512.png\";\n        var imagempiso3 = \"./logo512.png\";\n        var MAP1 = {name : \"deafult\", areas: []};\n\n        //console.log(getNumDevicesOfAP(\"salaEstudo\"));\n        //console.log(getNumDevicesOfAP(\"makerLab\"));\n        //console.log(getNumDevicesOfAP(\"nucleos\"));\n        //console.log(this.props.id.depNum);\n\n        switch(this.props.id.depNum) {\n            case 4:\n                imagempiso1 = \"./images/detipiso1.png\";\n                imagempiso2 = \"./images/dep4piso2.png\";\n                imagempiso3 = \"./images/dep4piso3.png\";\n                MAP1 = {\n                    name: \"mapadetipiso1\",\n                    areas: [\n                        // APs\n                        {name: getClickAPText(\"salaEstudo\"), shape: \"circle\", coords: [555,108,15], fillColor: \"rgba(0,0,250,0.5)\"},\n                        {name: getClickAPText(\"makerLab\"), shape: \"circle\", coords: [771,77,15], fillColor: \"rgba(0,0,250,0.5)\"},\n                        {name: getClickAPText(\"sala dos nucleos\"), shape: \"circle\", coords: [1109,85,15], fillColor: \"rgba(0,0,250,0.5)\"},\n\n                        // salas mais perto do AP da sala de estudo\n                        {name: \"4.1.18\", shape: \"rect\", coords: [469,92,574,178], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"salaEstudo\") )}, // 4.1.18\n                        {name: \"4.1.19\", shape: \"rect\", coords: [469,2,648,91], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"salaEstudo\") )}, // 4.1.19\n\n                        // salas mais perto do AP makerlab\n                        {name: \"4.1.20\", shape: \"rect\", coords: [649,2,754,91], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"makerLab\") )}, // 4.1.20\n                        {name: \"4.1.23\", shape: \"rect\", coords: [755,2,870,91], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"makerLab\") )}, //4.1.23\n                        {name: \"4.1.26\", shape: \"rect\", coords: [871,2,959,91], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"makerLab\") )}, // 4.1.26\n                        {name: \"4.1.27\", shape: \"rect\", coords: [960,2,1004,91], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"makerLab\") )}, // 4.1.27\n\n                        // salas mais perto do AP sala dos nucleos\n                        {name: \"4.1.28\", shape: \"rect\", coords: [1005,2,1092,91], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"sala dos nucleos\") )}, // 4.1.28\n                        {name: \"4.1.32\", shape: \"rect\", coords: [1093,2,1181,91], preFillColor: getColorFromNumDevices( getNumDevicesOfAP(\"sala dos nucleos\") )}, // 4.1.32\n                    ]\n                };\n                break;\n            case 23:\n                break;\n            default:\n\n        }\n\n        return (\n            <div>\n                <h1 align=\"center\"> {this.props.id.depName} </h1>\n                <h3 align=\"center\"> Piso 1 </h3>\n                <GridWithImage image={imagempiso1} map={MAP1} />\n                <h3 align=\"center\"> Piso 2 </h3>\n                <GridWithImage image={imagempiso2} map={MAP1} />\n                <h3 align=\"center\"> Piso 3 </h3>\n                <GridWithImage image={imagempiso3} map={MAP1} />\n            </div>\n        );\n    }\n}","import React from \"react\"\nimport Header from \"../components/Header\";\nimport {DepartmentGeneric} from \"../components/DepartmentGeneric\";\n\n/*\nconst DepartmentPage = () => {\n\n    return (\n        <div>\n            <Header />\n            <DepartmentGeneric />\n        </div>\n    );\n};\n*/\n\nexport class DepartmentPage extends React.Component{\n    render() {\n        return (\n            <div>\n                <Header />\n                <DepartmentGeneric id={this.props.location.state} />\n            </div>\n        );\n    }\n}\n\nexport default DepartmentPage;\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport { \n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Link,\n  Redirect \n} from \"react-router-dom\";\n\n//Pages\nimport IndexPage from \"./pages\";\nimport NotFoundPage from \"./pages/404\";\nimport ConnectionPage from \"./pages/myConnection\";\n//import Dep4Page from \"./pages/dep4\";\nimport DepartmentPage from \"./pages/department\";\n\nclass App extends Component {\n  render() {\n    return <Router> \n      <Switch>\n        <Route exact path=\"/\" component={IndexPage} />\n        <Route exact path=\"/myconnection\" component={ConnectionPage}/>\n        <Route exact path=\"/department\" component={DepartmentPage}/>\n        <Route path=\"/404\" component={NotFoundPage}/>\n        <Redirect to=\"/404\"/>\n      </Switch>\n    </Router>\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}